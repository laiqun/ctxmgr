<Window x:Class="ctxmgr.MainWindow"
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ctxmgr" 
        xmlns:utilities="clr-namespace:ctxmgr.Utilities" 
        x:Name="MainWindowInstance"
        xmlns:props="clr-namespace:ctxmgr.Properties"
        xmlns:settings="clr-namespace:ctxmgr.Page.Settings"
        mc:Ignorable="d"
        LocationChanged="MainWindowInstance_LocationChanged"
        SizeChanged="MainWindowInstance_SizeChanged"
        KeyDown="Window_KeyDown" Background="{DynamicResource BackgroundBrush}"  Foreground="{DynamicResource TextBrush}"
        Topmost="True" Closing="Window_Closing" BorderThickness="1" SizeToContent="Height"
        Title="FlashPad" Height="200" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Control">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}"></Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F0F0F0" Offset="0.0"/>
                <GradientStop Color="#E5E5E5" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#ECF4FC" Offset="0.0"/>
                <GradientStop Color="#DCECFC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
            <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
            <Style x:Key="ListTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="6,2,6,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Margin="0">
                                    <Border x:Name="innerBorder" Background="{StaticResource TabItem.Selected.Background}" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Margin="-1" Opacity="0"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="DoubleClickableHeader">
                <Border Background="Transparent"
                        HorizontalAlignment ="Stretch"
                        VerticalAlignment="Stretch"
                                >
                    <Label Content="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" Margin="0"
                           MouseDoubleClick="TabItemHeader_MouseDoubleClick"/>
                </Border>
            </DataTemplate>
            <!--<Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type Control}}"></Style>
            <Style TargetType="Menu" BasedOn="{StaticResource {x:Type Control}}"></Style>-->
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MyGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="0" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" KeyboardNavigation.TabNavigation="None">
            <MenuItem Header="{x:Static props:Resources.File}">
                <MenuItem Header="{x:Static props:Resources.LoadFromFile}" x:Name="LoadFromFileMenuItem" Click="LoadFromFileMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.SaveToFile}" x:Name="SaveToFileMenuItem" Click="SaveToFileMenuItem_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.HideWindow}" x:Name="HideWindow" Click="HideWindow_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.ExitApp}" x:Name="ExitApp" Click="ExitApp_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Edit}">
                <MenuItem Header="{x:Static props:Resources.Undo}" x:Name="UndoMenuItem" Click="UndoMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.Redo}" x:Name="RedoMenuItem" Click="RedoMenuItem_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.Cut}" x:Name="CutMenuItem" Click="CutMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.Copy}" x:Name="CopyMenuItem" Click="CopyMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.Paste}" x:Name="PasteMenuItem" Click="PasteMenuItem_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.Find}" x:Name="FindMenuItem" Click="FindMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.FindNext}" x:Name="FindNextMenuItem" Click="FindNextMenuItem_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.Replace}" x:Name="ReplaceMenuItem" Click="ReplaceMenuItem_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.SelectAll}" x:Name="SelectAllMenuItem" Click="SelectAllMenuItem_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Page}">
                <MenuItem Header="{x:Static props:Resources.NewTab}" x:Name="NewTab" Click="NewTab_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.DelTab}" x:Name="DelTab" Click="DelTab_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.EditTabTitle}" x:Name="ChangeTitle" Click="ChangeTitle_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.Move}">
                    <MenuItem Header="{x:Static props:Resources.MoveToLeftMost}" x:Name="MoveLeftMostMenuItem" Click="MoveLeftMostMenuItem_Click"></MenuItem>
                    <MenuItem Header="{x:Static props:Resources.MoveToRightMost}" x:Name="MoveRightMostMenuItem" Click="MoveRightMostMenuItem_Click"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="{x:Static props:Resources.MoveLeft}" x:Name="MoveLeftMenuItem" Click="MoveLeftMenuItem_Click"></MenuItem>
                    <MenuItem Header="{x:Static props:Resources.MoveRight}" x:Name="MoveRightMenuItem" Click="MoveRightMenuItem_Click"></MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Format}">
                <MenuItem Header="{x:Static props:Resources.LightMode}" x:Name="LightMode" Click="LightMode_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.DarkMode}" x:Name="DarkMode" Click="DarkMode_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.TextWrap}" IsCheckable="True" x:Name="TextWrapMenuItem" Click="TextWrapMenuItem_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Insert}" >
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <MenuItem HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                            Header="{x:Static props:Resources.InsertSeparator}" x:Name="InsertSeparatorMenuItem" Click="InsertSeparatorMenuItem_Click"></MenuItem>
                        <MenuItem HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                            Header="{x:Static props:Resources.InsertDateTime}" x:Name="InsertDateTimeMenuItem" Click="InsertDateTimeMenuItem_Click"></MenuItem>
                        <MenuItem HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                            Header="{x:Static props:Resources.InsertDateTimeSeparator}" x:Name="InsertDateTimeSeparator" Click="InsertDateTimeSeparator_Click"></MenuItem>
                        <Separator></Separator>
                        <CollectionContainer x:Name="DynamicMenusContainer" />
                        <Separator></Separator>
                        <MenuItem HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                            Header="{x:Static props:Resources.InsertTextSetting}" x:Name="InsertTextSettingMenuItem" Click="InsertTextSettingMenuItem_Click"></MenuItem>
                    </CompositeCollection>
                </MenuItem.ItemsSource>
                <!-- 
                <MenuItem.ItemTemplate>
                    <DataTemplate  DataType="{x:Type settings:CustomerTextSnippet}">
                        <TextBlock Text="{Binding DisplayText}"/>
                    </DataTemplate>
                </MenuItem.ItemTemplate>-->
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding DisplayText}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <EventSetter Event="Click" Handler="InsertCustomerTextSnippetMenuItem_Click" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Tools}">
                <MenuItem Header="{x:Static props:Resources.ToggleTopmost}" x:Name="ToggleTopmost" Click="ToggleTopmost_Click"></MenuItem>
                <MenuItem Header="{x:Static props:Resources.RunOnStartUp}" Visibility="Collapsed" x:Name="ToggleRunOnStartUp" Click="ToggleRunOnStartUp_Click"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.Settings}" x:Name="SettingsMenuItem" Click="SettingsMenuItem_Click"></MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static props:Resources.Help}">
                <MenuItem Header="{x:Static props:Resources.SoftwareDescription}" x:Name="SoftwareDescriptionMenuItem" Click="SoftwareDescriptionMenuItem_Click" ></MenuItem>
                <MenuItem Header="{x:Static props:Resources.ShortcutList}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static props:Resources.About}" x:Name="About" Click="About_Click"></MenuItem>
            </MenuItem>
        </Menu>
        <TabControl Grid.Row="1" x:Name="MyTabControl" MinHeight="180" MouseDoubleClick="MyTabControl_MouseDoubleClick" SelectionChanged="MyTabControl_SelectionChanged" >
            <TabItem Style="{DynamicResource ListTabItemStyle}" x:Name="menuTabItem" Padding="0,0,0,0" Focusable="False" >
                <TabItem.Header >
                    <Menu VerticalAlignment="Stretch" Padding="0,0,0,0"  x:Name="ListMenu" BorderThickness="0"  Margin="0" Background="LightGray"
                          >
                        <MenuItem Header="≡" x:Name="TabList" Height="21.24"    HorizontalAlignment="Stretch" BorderThickness="0"  Padding="9,0,9,0"  Margin="0">
                            <!--<MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Height" Value="{Binding Height, ElementName=menuTabItem}" />
                                </Style>
                            </MenuItem.Style>-->
                        </MenuItem>
                    </Menu>
                </TabItem.Header>
            </TabItem>
            <TabItem HeaderTemplate="{DynamicResource DoubleClickableHeader}" Header="Tab 1" x:Name="DefaultTabItem" IsSelected="True" MouseDoubleClick="TabItemHeader_MouseDoubleClick">
                <TextBox   x:Name="DefaultTextBox"  utilities:TextBoxHelper.Placeholder="{x:Static props:Resources.TextBoxHint}"  AcceptsReturn="True" TextWrapping="NoWrap"  TextChanged="TextBox_TextChanged" VerticalScrollBarVisibility="Auto"></TextBox>
            </TabItem>
        </TabControl>

        <Popup x:Name="SuggestionsPopup"
               Grid.Row="2"
               Visibility="Collapsed"
               Placement="Absolute"
               StaysOpen="True"
               AllowsTransparency="True"
               IsOpen="False"
               Margin="0,5,0,0"
               Width="{Binding ElementName=MyGrid,Path=ActualWidth}"
               >
            <Border Background="White" BorderBrush="Black" BorderThickness="1">
                <ListBox x:Name="CommandSuggestionsListbox"
                         MaxHeight="200">
                    <ListBoxItem Content="doc"></ListBoxItem>
                    <ListBoxItem Content="explain"></ListBoxItem>
                    <ListBoxItem Content="fix"></ListBoxItem>
                    <ListBoxItem Content="help"></ListBoxItem>
                    <ListBoxItem Content="optimize"></ListBoxItem>
                    <ListBoxItem Content="tests"></ListBoxItem>
                </ListBox>
            </Border>
        </Popup>
    </Grid>
</Window>
