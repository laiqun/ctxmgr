<Window x:Class="ctxmgr.Page.FileFolderSelector.FileFolderSelector"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:props="clr-namespace:ctxmgr.Properties"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ctxmgr.Page.FileFolderSelector"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="{x:Static props:Resources.ChooseFolderFilesWindowTitle}" Height="460"  Width="740">
    <Window.Resources>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border  Height="24" Padding="5,5,5,5" Width="24">
                            <Path x:Name="ExpandPath"   Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="135" CenterY="4" CenterX="3"/>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <RotateTransform Angle="180" CenterY="4" CenterX="3"/>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton VerticalAlignment="Center"  x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}">
                            </ToggleButton>
                            <Border x:Name="Bd"  VerticalAlignment="Center" Height="24" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter VerticalAlignment="Center" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 顶部输入栏 -->
        <Grid Grid.Row="0"  Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Height="26" VerticalContentAlignment="Center" Text="{Binding TargetFolder, UpdateSourceTrigger=PropertyChanged}" x:Name="FolderTextBox" KeyDown="FolderTextBox_KeyDown"  VerticalAlignment="Center" Margin="0,0,10,0" RenderTransformOrigin="0.5,0.5">

            </TextBox>
            <Button Grid.Column="1" Height="32" Padding="2"  Content="{x:Static props:Resources.Browse}" Width="80" Command="{Binding BrowseCommand}" RenderTransformOrigin="0.5,0.5" Margin="2,0,0,0">
            </Button>
            <!--      <Button Grid.Column="2" Content="{x:Static props:Resources.Load}" Width="80" Margin="10,0,0,0" Command="{Binding LoadCommand}"/> -->
        </Grid>
       <!-- <TreeView>
            <TreeViewItem Style="{DynamicResource TreeViewItemStyle1}" Header="计算机">
                <TreeViewItem Header="本地磁盘 (C:)">
                    <TreeViewItem Header="Program Files"/>
                    <TreeViewItem Header="Windows"/>
                </TreeViewItem>
                <TreeViewItem Header="本地磁盘 (D:)">
                    <TreeViewItem Header="音乐"/>
                    <TreeViewItem Header="视频"/>
                </TreeViewItem>
            </TreeViewItem>
            <TreeViewItem Header="网络"/>
            <TreeViewItem Header="回收站"/>
        </TreeView>-->
        <!-- TreeView -->
        <TreeView Grid.Row="1" ItemsSource="{Binding RootItems}" MouseDoubleClick="TreeView_MouseDoubleClick">
            
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:FileSystemItemViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <!-- 先显示 CheckBox -->
                        <CheckBox IsThreeState="{Binding IsDirectory}"  VerticalAlignment="Center"  IsChecked="{Binding IsChecked, Mode=TwoWay}" Margin="0,0,5,0">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                        <!-- 文件夹/文件图标 -->
                        <TextBlock Text="{Binding Icon}" FontSize="20" Foreground="{Binding IconColor}" VerticalAlignment="Center"  Margin="0,0,5,0"/>

                        <!-- 文件/文件夹名字 -->
                        <TextBlock Text="{Binding Name}" FontSize="20" VerticalAlignment="Center"  />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="Margin" Value="0,4,0,4"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <Grid Grid.Row="3" Margin="0,4,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0">
                <TextBlock Text="{x:Static props:Resources.DoubleClickFolder}" Margin="0,5,0,0" ></TextBlock>
                <TextBlock Text="{x:Static props:Resources.DoubleClickFile}"></TextBlock>
            </StackPanel>
            <Grid Grid.Column="1"></Grid>
            <Grid Grid.Column="2" >
                <Button Content="Reset" VerticalAlignment="Center" Padding="6" Command="{Binding ResetCommand}"></Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
