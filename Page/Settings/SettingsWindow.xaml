<Window x:Class="ctxmgr.Page.Settings.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ctxmgr.Page.Settings"
        xmlns:converter="clr-namespace:ctxmgr.Utilities.Converter"
        mc:Ignorable="d"
        xmlns:props="clr-namespace:ctxmgr.Properties"
        xmlns:utilities="clr-namespace:ctxmgr.Utilities" 
        WindowStartupLocation="CenterOwner"
        WindowStyle="SingleBorderWindow"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="{x:Static props:Resources.SettingsWindowTitle}" Height="450" Width="420"
        >
    <Window.Resources>
        <converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="{x:Static props:Resources.General}">
                <StackPanel>
                    <GroupBox Header="{x:Static props:Resources.GeneralOptions}">
                        <StackPanel>
                            <CheckBox Content="{x:Static props:Resources.GeneralAutoStart}" Margin="10" IsChecked="{Binding  IsAutoStart,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <!-- <CheckBox Content="{x:Static props:Resources.GeneralCloseToTray}" Margin="10"/> -->
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{x:Static props:Resources.DblClickTitleAction}">
                        <StackPanel Orientation="Horizontal" Margin="4">
                            <RadioButton Content="{x:Static props:Resources.DblClickTitleActionNone}" Margin="2"
                                         IsChecked="{Binding DoubleClickTitleAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static props:DoubleClickTitleActionEnum.None}}"
                                         GroupName="DoubleClickActionGroup"></RadioButton>
                            <RadioButton Content="{x:Static props:Resources.DblClickTitleActionRename}" Margin="2"
                                         IsChecked="{Binding DoubleClickTitleAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static props:DoubleClickTitleActionEnum.EditTitle}}"
                                         GroupName="DoubleClickActionGroup"></RadioButton>
                            <RadioButton Content="{x:Static props:Resources.DblClickTitleActionDelete}" Margin="2"
                                         IsChecked="{Binding DoubleClickTitleAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static props:DoubleClickTitleActionEnum.DeletePage}}"
                                         GroupName="DoubleClickActionGroup"></RadioButton>
                        </StackPanel>
                    </GroupBox>
                    <Button Content="{x:Static props:Resources.ResetToDefault}" x:Name="RestButton" Click="RestButton_Click" Padding="5" Margin="15 40"></Button>
                </StackPanel>
            </TabItem>
            <TabItem Header="{x:Static props:Resources.Shortcuts}">
                <GroupBox Header="{x:Static props:Resources.ShortcutsShowOrHide}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="85"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Grid.ColumnSpan="2">
                            <Label Content="{x:Static props:Resources.ShortcutsShowOrHideBasicKey}" Margin="5"/>
                            <Label Content="{x:Static props:Resources.ShortcutsShowOrHideCombineKey}" Margin="5"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2">
                            <ComboBox x:Name="HotKeyBase" SelectionChanged="HotKeyBase_SelectionChanged">
                            </ComboBox>
                            <Border Margin="5">
                                <StackPanel>
                                    <CheckBox Content="Ctrl" x:Name="CtrlCheckBox" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"  Margin="2"/>
                                    <CheckBox Content="Alt" x:Name="AltCheckBox" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="2"/>
                                    <CheckBox Content="Shift" x:Name="ShiftCheckBox" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="2"/>
                                    <CheckBox Content="Win" x:Name="WinCheckBox" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="2"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="{x:Static props:Resources.TextSnippets}" x:Name="TextSnippetsTabItem">
                <StackPanel>
                    <Label Content="{x:Static props:Resources.InsertSeparatorFormat}"></Label>
                    <TextBox Text="{Binding InsertLineText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <Label Content="{x:Static props:Resources.InsertDateTimeFormat}" Margin="0,5,0,0"></Label>
                    <TextBox Text="{Binding InsertDateText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <Label Content="{x:Static props:Resources.InsertDateTimeSeparatorFormat}" Margin="0,5,0,0"></Label>
                    <TextBox Text="{Binding InsertLineDateText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <GroupBox Header="{x:Static props:Resources.TextSnippetsCustom}" Margin="0,15,0,0">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Margin="4,0,0,0" utilities:TextBoxHelper.Placeholder="{x:Static props:Resources.NewSnippetPlaceholder}"  Text="{Binding NewTextSnippetTxtBox,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" MaxWidth="520" MaxHeight="80" AcceptsReturn="True"></TextBox>
                                <Button Grid.Column="1" Command="{Binding AddNewTextSnippetCommand}" Content="{x:Static props:Resources.TextSnippetsAdd}" Margin="2"  />
                            </Grid>
                            <ListBox Grid.Column="0" Height="180"  HorizontalContentAlignment="Stretch" Name="SnippetListBox" Margin="5" ItemsSource="{Binding CustomerTextSnippets}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid  MaxWidth="540">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Grid.Column="0" MaxWidth="340" MaxHeight="80" AcceptsReturn="True" Text="{Binding Text ,Mode=TwoWay,UpdateSourceTrigger=LostFocus}"  
                                                     />
                                            <Button Content="&#x2716;" Grid.Column="1"
                                                    Command="{Binding DataContext.DeleteTextSnippetCommand,RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                    CommandParameter="{Binding }"
                                                    ></Button>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
