<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于(_A)</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>复制(_C)</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>剪切(_X)</value>
  </data>
  <data name="DarkMode" xml:space="preserve">
    <value>深色模式</value>
  </data>
  <data name="DelTab" xml:space="preserve">
    <value>删除页面(_D)</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑(_E)</value>
  </data>
  <data name="EditTabTitle" xml:space="preserve">
    <value>修改页面标题(_C)</value>
  </data>
  <data name="ExitApp" xml:space="preserve">
    <value>退出(_X)</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件(_F)</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>查找(_F)</value>
  </data>
  <data name="FindNext" xml:space="preserve">
    <value>查找下一个(_N)</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>格式(_O)</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助(_H)</value>
  </data>
  <data name="HideWindow" xml:space="preserve">
    <value>隐藏(_H)   Esc</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>插入(_I)</value>
  </data>
  <data name="InsertDateTime" xml:space="preserve">
    <value>插入时间日期(_D)</value>
  </data>
  <data name="InsertDateTimeSeparator" xml:space="preserve">
    <value>插入时间日期分割线(_B)</value>
  </data>
  <data name="InsertSeparator" xml:space="preserve">
    <value>插入分割行(_L)</value>
  </data>
  <data name="InsertTextSetting" xml:space="preserve">
    <value>插入文本设置(_C)</value>
  </data>
  <data name="LightMode" xml:space="preserve">
    <value>浅色模式</value>
  </data>
  <data name="LoadFromFile" xml:space="preserve">
    <value>从文件载入(_L)</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>移动(_M)</value>
  </data>
  <data name="MoveLeft" xml:space="preserve">
    <value>向左移动(_L)</value>
  </data>
  <data name="MoveRight" xml:space="preserve">
    <value>向右移动(_R)</value>
  </data>
  <data name="MoveToLeftMost" xml:space="preserve">
    <value>移动到最左侧(_F)</value>
  </data>
  <data name="MoveToRightMost" xml:space="preserve">
    <value>移动到最右侧(_A)</value>
  </data>
  <data name="NewTab" xml:space="preserve">
    <value>新建页面(_N)</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>页面(_P)</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>粘贴(_P)</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>替换(_R)</value>
  </data>
  <data name="RunOnStartUp" xml:space="preserve">
    <value>开机自启动(_S)</value>
  </data>
  <data name="SaveToFile" xml:space="preserve">
    <value>保存到文件(_S)</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>全选(_A)</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置(_O)</value>
  </data>
  <data name="ShortcutList" xml:space="preserve">
    <value>快捷键列表(_S)</value>
  </data>
  <data name="SoftwareDescription" xml:space="preserve">
    <value>软件说明(_R)</value>
  </data>
  <data name="TextBoxHint" xml:space="preserve">
    <value>快速记下或者按/使用快捷命令</value>
  </data>
  <data name="ToggleTopmost" xml:space="preserve">
    <value>窗口保持在最顶层(_T)</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>工具(_T)</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>撤销(_U)</value>
  </data>
  <data name="VisitOfficialWebsite" xml:space="preserve">
    <value>访问官网</value>
  </data>
  <data name="TextWrap" xml:space="preserve">
    <value>自动换行(_W)</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="TabTitleEditor" xml:space="preserve">
    <value>修改页面标题</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="AltZRegistrationFailed" xml:space="preserve">
    <value>无法注册全局快捷键 Alt+C</value>
  </data>
  <data name="CtrlQRegistrationFailed" xml:space="preserve">
    <value>无法注册全局快捷键 Ctrl+Q</value>
  </data>
</root>